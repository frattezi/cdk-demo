"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Assertion {
    /**
     * Assert this thing and another thing
     */
    and(assertion) {
        // Needs to delegate to a function so that we can import mutually dependent classes in the right order
        return and(this, assertion);
    }
    assertOrThrow(inspector) {
        if (!this.assertUsing(inspector)) {
            throw new Error(`${JSON.stringify(inspector.value, null, 2)} does not match ${this.description}`);
        }
    }
}
exports.Assertion = Assertion;
class JestFriendlyAssertion extends Assertion {
}
exports.JestFriendlyAssertion = JestFriendlyAssertion;
const and_assertion_1 = require("./assertions/and-assertion");
function and(left, right) {
    return new and_assertion_1.AndAssertion(left, right);
}
const negated_assertion_1 = require("./assertions/negated-assertion");
function not(assertion) {
    return new negated_assertion_1.NegatedAssertion(assertion);
}
exports.not = not;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXJ0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXNzZXJ0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEsTUFBc0IsU0FBUztJQUs3Qjs7T0FFRztJQUNJLEdBQUcsQ0FBQyxTQUFvQztRQUM3QyxzR0FBc0c7UUFDdEcsT0FBTyxHQUFHLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFTSxhQUFhLENBQUMsU0FBeUI7UUFDNUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxDQUFDLEVBQUU7WUFDaEMsTUFBTSxJQUFJLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLG1CQUFtQixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQztTQUNuRztJQUNILENBQUM7Q0FDRjtBQWxCRCw4QkFrQkM7QUFFRCxNQUFzQixxQkFBd0QsU0FBUSxTQUF5QjtDQUs5RztBQUxELHNEQUtDO0FBRUQsOERBQTBEO0FBRTFELFNBQVMsR0FBRyxDQUFzQixJQUFrQixFQUFFLEtBQW1CO0lBQ3ZFLE9BQU8sSUFBSSw0QkFBWSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztBQUN2QyxDQUFDO0FBRUQsc0VBQWtFO0FBRWxFLFNBQWdCLEdBQUcsQ0FBc0IsU0FBdUI7SUFDOUQsT0FBTyxJQUFJLG9DQUFnQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3pDLENBQUM7QUFGRCxrQkFFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluc3BlY3RvciB9IGZyb20gJy4vaW5zcGVjdG9yJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFzc2VydGlvbjxJbnNwZWN0b3JDbGFzcyBleHRlbmRzIEluc3BlY3Rvcj4ge1xuICBwdWJsaWMgYWJzdHJhY3QgcmVhZG9ubHkgZGVzY3JpcHRpb246IHN0cmluZztcblxuICBwdWJsaWMgYWJzdHJhY3QgYXNzZXJ0VXNpbmcoaW5zcGVjdG9yOiBJbnNwZWN0b3JDbGFzcyk6IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEFzc2VydCB0aGlzIHRoaW5nIGFuZCBhbm90aGVyIHRoaW5nXG4gICAqL1xuICBwdWJsaWMgYW5kKGFzc2VydGlvbjogQXNzZXJ0aW9uPEluc3BlY3RvckNsYXNzPik6IEFzc2VydGlvbjxJbnNwZWN0b3JDbGFzcz4ge1xuICAgIC8vIE5lZWRzIHRvIGRlbGVnYXRlIHRvIGEgZnVuY3Rpb24gc28gdGhhdCB3ZSBjYW4gaW1wb3J0IG11dHVhbGx5IGRlcGVuZGVudCBjbGFzc2VzIGluIHRoZSByaWdodCBvcmRlclxuICAgIHJldHVybiBhbmQodGhpcywgYXNzZXJ0aW9uKTtcbiAgfVxuXG4gIHB1YmxpYyBhc3NlcnRPclRocm93KGluc3BlY3RvcjogSW5zcGVjdG9yQ2xhc3MpIHtcbiAgICBpZiAoIXRoaXMuYXNzZXJ0VXNpbmcoaW5zcGVjdG9yKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGAke0pTT04uc3RyaW5naWZ5KGluc3BlY3Rvci52YWx1ZSwgbnVsbCwgMil9IGRvZXMgbm90IG1hdGNoICR7dGhpcy5kZXNjcmlwdGlvbn1gKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEplc3RGcmllbmRseUFzc2VydGlvbjxJbnNwZWN0b3JDbGFzcyBleHRlbmRzIEluc3BlY3Rvcj4gZXh0ZW5kcyBBc3NlcnRpb248SW5zcGVjdG9yQ2xhc3M+IHtcbiAgLyoqXG4gICAqIEdlbmVyYXRlcyBhbiBlcnJvciBtZXNzYWdlIHRoYXQgY2FuIGJlIHVzZWQgYnkgSmVzdC5cbiAgICovXG4gIHB1YmxpYyBhYnN0cmFjdCBnZW5lcmF0ZUVycm9yTWVzc2FnZSgpOiBzdHJpbmc7XG59XG5cbmltcG9ydCB7IEFuZEFzc2VydGlvbiB9IGZyb20gJy4vYXNzZXJ0aW9ucy9hbmQtYXNzZXJ0aW9uJztcblxuZnVuY3Rpb24gYW5kPEkgZXh0ZW5kcyBJbnNwZWN0b3I+KGxlZnQ6IEFzc2VydGlvbjxJPiwgcmlnaHQ6IEFzc2VydGlvbjxJPik6IEFzc2VydGlvbjxJPiB7XG4gIHJldHVybiBuZXcgQW5kQXNzZXJ0aW9uKGxlZnQsIHJpZ2h0KTtcbn1cblxuaW1wb3J0IHsgTmVnYXRlZEFzc2VydGlvbiB9IGZyb20gJy4vYXNzZXJ0aW9ucy9uZWdhdGVkLWFzc2VydGlvbic7XG5cbmV4cG9ydCBmdW5jdGlvbiBub3Q8VCBleHRlbmRzIEluc3BlY3Rvcj4oYXNzZXJ0aW9uOiBBc3NlcnRpb248VD4pOiBBc3NlcnRpb248VD4ge1xuICByZXR1cm4gbmV3IE5lZ2F0ZWRBc3NlcnRpb24oYXNzZXJ0aW9uKTtcbn1cbiJdfQ==