{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-events": "1.38.0",
    "@aws-cdk/aws-iam": "1.38.0",
    "@aws-cdk/core": "1.38.0",
    "@aws-cdk/custom-resources": "1.38.0",
    "constructs": "^3.0.2"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::ECR",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.5.0 (build 46538f8)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "ecr"
  ],
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-ecr",
  "readme": {
    "markdown": "## Amazon ECR Construct Library\n<!--BEGIN STABILITY BANNER-->\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n<!--END STABILITY BANNER-->\n\nThis package contains constructs for working with Amazon Elastic Container Registry.\n\n### Repositories\n\nDefine a repository by creating a new instance of `Repository`. A repository\nholds multiple verions of a single container image.\n\n```ts\nconst repository = new ecr.Repository(this, 'Repository');\n```\n\n### Image scanning\n\nAmazon ECR image scanning helps in identifying software vulnerabilities in your container images. You can manually scan container images stored in Amazon ECR, or you can configure your repositories to scan images when you push them to a repository. To create a new reposity to scan on push, simply enable `imageScanOnPush` in the properties\n\n```ts\nconst repository = new ecr.Repository(stack, 'Repo', {\n  imageScanOnPush: true\n});\n```\n\nTo create an `onImageScanCompleted` event rule and trigger the event target\n\n```ts\nrepository.onImageScanCompleted('ImageScanComplete')\n  .addTarget(...)\n```\n\n\n### Automatically clean up repositories\n\nYou can set life cycle rules to automatically clean up old images from your\nrepository. The first life cycle rule that matches an image will be applied\nagainst that image. For example, the following deletes images older than\n30 days, while keeping all images tagged with prod (note that the order\nis important here):\n\n```ts\nrepository.addLifecycleRule({ tagPrefixList: ['prod'], maxImageCount: 9999 });\nrepository.addLifecycleRule({ maxImageAge: cdk.Duration.days(30) });\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-ecr",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.ECR",
      "packageId": "Amazon.CDK.AWS.ECR",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "ecr",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.ecr"
    },
    "js": {
      "npm": "@aws-cdk/aws-ecr"
    },
    "python": {
      "distName": "aws-cdk.aws-ecr",
      "module": "aws_cdk.aws_ecr"
    }
  },
  "types": {
    "@aws-cdk/aws-ecr.CfnRepository": {
      "assembly": "@aws-cdk/aws-ecr",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::ECR::Repository"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::ECR::Repository`."
      },
      "fqn": "@aws-cdk/aws-ecr.CfnRepository",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::ECR::Repository`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecr.CfnRepositoryProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecr.generated.ts",
        "line": 86
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 145
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 158
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRepository",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 90
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 95
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 150
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags",
            "stability": "external",
            "summary": "`AWS::ECR::Repository.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 119
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext",
            "stability": "external",
            "summary": "`AWS::ECR::Repository.RepositoryPolicyText`."
          },
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 113
          },
          "name": "repositoryPolicyText",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy",
            "stability": "external",
            "summary": "`AWS::ECR::Repository.LifecyclePolicy`."
          },
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 101
          },
          "name": "lifecyclePolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname",
            "stability": "external",
            "summary": "`AWS::ECR::Repository.RepositoryName`."
          },
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 107
          },
          "name": "repositoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty": {
      "assembly": "@aws-cdk/aws-ecr",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecr.generated.ts",
        "line": 168
      },
      "name": "LifecyclePolicyProperty",
      "namespace": "CfnRepository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext",
            "stability": "external",
            "summary": "`CfnRepository.LifecyclePolicyProperty.LifecyclePolicyText`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 173
          },
          "name": "lifecyclePolicyText",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid",
            "stability": "external",
            "summary": "`CfnRepository.LifecyclePolicyProperty.RegistryId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 178
          },
          "name": "registryId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.CfnRepositoryProps": {
      "assembly": "@aws-cdk/aws-ecr",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::ECR::Repository`."
      },
      "fqn": "@aws-cdk/aws-ecr.CfnRepositoryProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecr.generated.ts",
        "line": 16
      },
      "name": "CfnRepositoryProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy",
            "stability": "external",
            "summary": "`AWS::ECR::Repository.LifecyclePolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 22
          },
          "name": "lifecyclePolicy",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-ecr.CfnRepository.LifecyclePolicyProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname",
            "stability": "external",
            "summary": "`AWS::ECR::Repository.RepositoryName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 28
          },
          "name": "repositoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext",
            "stability": "external",
            "summary": "`AWS::ECR::Repository.RepositoryPolicyText`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 34
          },
          "name": "repositoryPolicyText",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags",
            "stability": "external",
            "summary": "`AWS::ECR::Repository.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecr.generated.ts",
            "line": 40
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.IRepository": {
      "assembly": "@aws-cdk/aws-ecr",
      "docs": {
        "stability": "stable",
        "summary": "Represents an ECR repository."
      },
      "fqn": "@aws-cdk/aws-ecr.IRepository",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/repository.ts",
        "line": 11
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add a policy statement to the repository's resource policy."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 45
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grant the given principal identity permissions to perform the actions on this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 50
          },
          "name": "grant",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to pull images in this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 55
          },
          "name": "grantPull",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to pull and push images to this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 60
          },
          "name": "grantPullPush",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Requires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Define a CloudWatch event that triggers when something happens to this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 71
          },
          "name": "onCloudTrailEvent",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Requires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 83
          },
          "name": "onCloudTrailImagePushed",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Use\n`rule.addEventPattern(pattern)` to specify a filter.",
            "stability": "stable",
            "summary": "Defines a CloudWatch event rule which triggers for repository events."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 98
          },
          "name": "onEvent",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Defines an AWS CloudWatch event rule that can trigger a target when the image scan is completed."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 92
          },
          "name": "onImageScanCompleted",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
            "stability": "stable",
            "summary": "Returns the URI of the repository for a certain tag. Can be used in `docker push/pull`."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 40
          },
          "name": "repositoryUriForTag",
          "parameters": [
            {
              "docs": {
                "summary": "Image tag to use (tools usually default to \"latest\" if omitted)."
              },
              "name": "tag",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "IRepository",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 22
          },
          "name": "repositoryArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 16
          },
          "name": "repositoryName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
            "stability": "stable",
            "summary": "The URI of this repository (represents the latest image):."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 31
          },
          "name": "repositoryUri",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.LifecycleRule": {
      "assembly": "@aws-cdk/aws-ecr",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An ECR life cycle rule."
      },
      "fqn": "@aws-cdk/aws-ecr.LifecycleRule",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lifecycle.ts",
        "line": 6
      },
      "name": "LifecycleRule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No description",
            "stability": "stable",
            "summary": "Describes the purpose of the rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle.ts",
            "line": 28
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Specify exactly one of maxImageCount and maxImageAge.",
            "stability": "stable",
            "summary": "The maximum age of images to retain. The value must represent a number of days."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle.ts",
            "line": 59
          },
          "name": "maxImageAge",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Specify exactly one of maxImageCount and maxImageAge.",
            "stability": "stable",
            "summary": "The maximum number of images to retain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle.ts",
            "line": 52
          },
          "name": "maxImageCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically assigned",
            "remarks": "All rules must have a unique priority, where lower numbers have\nhigher precedence. The first rule that matches is applied to an image.\n\nThere can only be one rule with a tagStatus of Any, and it must have\nthe highest rulePriority.\n\nAll rules without a specified priority will have incrementing priorities\nautomatically assigned to them, higher than any rules that DO have priorities.",
            "stability": "stable",
            "summary": "Controls the order in which rules are evaluated (low to high)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle.ts",
            "line": 21
          },
          "name": "rulePriority",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Only if tagStatus == TagStatus.Tagged",
            "stability": "stable",
            "summary": "Select images that have ALL the given prefixes in their tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle.ts",
            "line": 45
          },
          "name": "tagPrefixList",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "TagStatus.Tagged if tagPrefixList is given, TagStatus.Any otherwise",
            "remarks": "Only one rule is allowed to select untagged images, and it must\nhave the highest rulePriority.",
            "stability": "stable",
            "summary": "Select images based on tags."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lifecycle.ts",
            "line": 38
          },
          "name": "tagStatus",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecr.TagStatus"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions": {
      "assembly": "@aws-cdk/aws-ecr",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the onCloudTrailImagePushed method."
      },
      "fqn": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions",
      "interfaces": [
        "@aws-cdk/aws-events.OnEventOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/repository.ts",
        "line": 269
      },
      "name": "OnCloudTrailImagePushedOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Watch changes to all tags",
            "stability": "stable",
            "summary": "Only watch changes to this image tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 275
          },
          "name": "imageTag",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.OnImageScanCompletedOptions": {
      "assembly": "@aws-cdk/aws-ecr",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for the OnImageScanCompleted method."
      },
      "fqn": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions",
      "interfaces": [
        "@aws-cdk/aws-events.OnEventOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/repository.ts",
        "line": 281
      },
      "name": "OnImageScanCompletedOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Watch the changes to the repository with all image tags",
            "remarks": "Leave it undefined to watch the full repository.",
            "stability": "stable",
            "summary": "Only watch changes to the image tags spedified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 288
          },
          "name": "imageTags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.Repository": {
      "assembly": "@aws-cdk/aws-ecr",
      "base": "@aws-cdk/aws-ecr.RepositoryBase",
      "docs": {
        "stability": "stable",
        "summary": "Define an ECR repository."
      },
      "fqn": "@aws-cdk/aws-ecr.Repository",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-ecr.RepositoryProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/repository.ts",
        "line": 337
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns an ECR ARN for a repository that resides in the same account/region as the current stack."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 394
          },
          "name": "arnForLocalRepository",
          "parameters": [
            {
              "name": "repositoryName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.IConstruct"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 354
          },
          "name": "fromRepositoryArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "repositoryArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecr.IRepository"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import a repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 341
          },
          "name": "fromRepositoryAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.RepositoryAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecr.IRepository"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 377
          },
          "name": "fromRepositoryName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "repositoryName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-ecr.IRepository"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Life cycle rules automatically expire images from the repository that match\ncertain conditions.",
            "stability": "stable",
            "summary": "Add a life cycle rule to the repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 478
          },
          "name": "addLifecycleRule",
          "parameters": [
            {
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.LifecycleRule"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a policy statement to the repository's resource policy."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 465
          },
          "name": "addToResourcePolicy",
          "overrides": "@aws-cdk/aws-ecr.RepositoryBase",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        }
      ],
      "name": "Repository",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 403
          },
          "name": "repositoryArn",
          "overrides": "@aws-cdk/aws-ecr.RepositoryBase",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 402
          },
          "name": "repositoryName",
          "overrides": "@aws-cdk/aws-ecr.RepositoryBase",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.RepositoryAttributes": {
      "assembly": "@aws-cdk/aws-ecr",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ecr.RepositoryAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/repository.ts",
        "line": 329
      },
      "name": "RepositoryAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 331
          },
          "name": "repositoryArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 330
          },
          "name": "repositoryName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.RepositoryBase": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-ecr",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "remarks": "Reused between imported repositories and owned repositories.",
        "stability": "stable",
        "summary": "Base class for ECR repository."
      },
      "fqn": "@aws-cdk/aws-ecr.RepositoryBase",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/core.ResourceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ecr.IRepository"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/repository.ts",
        "line": 104
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Add a policy statement to the repository's resource policy."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 118
          },
          "name": "addToResourcePolicy",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the given principal identity permissions to perform the actions on this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 227
          },
          "name": "grant",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "actions",
              "type": {
                "primitive": "string"
              },
              "variadic": true
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          },
          "variadic": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to use the images in this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 240
          },
          "name": "grantPull",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grant the given identity permissions to pull and push images to this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 256
          },
          "name": "grantPullPush",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "remarks": "Requires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Define a CloudWatch event that triggers when something happens to this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 152
          },
          "name": "onCloudTrailEvent",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "Requires that there exists at least one CloudTrail Trail in your account\nthat captures the event. This method will not create the Trail.",
            "stability": "stable",
            "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image is pushed to this repository."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 177
          },
          "name": "onCloudTrailImagePushed",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecr.OnCloudTrailImagePushedOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "Use\n`rule.addEventPattern(pattern)` to specify a filter.",
            "stability": "stable",
            "summary": "Defines a CloudWatch event rule which triggers for repository events."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 215
          },
          "name": "onEvent",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-events.OnEventOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Defines an AWS CloudWatch event rule that can trigger a target when an image scan is completed."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 196
          },
          "name": "onImageScanCompleted",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "parameters": [
            {
              "docs": {
                "summary": "The id of the rule."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "Options for adding the rule."
              },
              "name": "options",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ecr.OnImageScanCompletedOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-events.Rule"
            }
          }
        },
        {
          "docs": {
            "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY[:TAG]",
            "stability": "stable",
            "summary": "Returns the URL of the repository. Can be used in `docker push/pull`."
          },
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 137
          },
          "name": "repositoryUriForTag",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "parameters": [
            {
              "docs": {
                "summary": "Optional image tag."
              },
              "name": "tag",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "RepositoryBase",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 113
          },
          "name": "repositoryArn",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 108
          },
          "name": "repositoryName",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "ACCOUNT.dkr.ecr.REGION.amazonaws.com/REPOSITORY",
            "stability": "stable",
            "summary": "The URI of this repository (represents the latest image):."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 126
          },
          "name": "repositoryUri",
          "overrides": "@aws-cdk/aws-ecr.IRepository",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.RepositoryProps": {
      "assembly": "@aws-cdk/aws-ecr",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-ecr.RepositoryProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/repository.ts",
        "line": 291
      },
      "name": "RepositoryProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Enable the scan on push when creating the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 326
          },
          "name": "imageScanOnPush",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "The default registry is assumed.",
            "see": "https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_PutLifecyclePolicy.html",
            "stability": "stable",
            "summary": "The AWS account ID associated with the registry that contains the repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 312
          },
          "name": "lifecycleRegistryId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No life cycle rules",
            "stability": "stable",
            "summary": "Life cycle rules to apply to this registry."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 304
          },
          "name": "lifecycleRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecr.LifecycleRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.Retain",
            "stability": "stable",
            "summary": "Determine what happens to the repository when the resource/stack is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 319
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Automatically generated name.",
            "stability": "stable",
            "summary": "Name for this repository."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/repository.ts",
            "line": 297
          },
          "name": "repositoryName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-ecr.TagStatus": {
      "assembly": "@aws-cdk/aws-ecr",
      "docs": {
        "stability": "stable",
        "summary": "Select images based on tags."
      },
      "fqn": "@aws-cdk/aws-ecr.TagStatus",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/lifecycle.ts",
        "line": 65
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Rule applies to all images."
          },
          "name": "ANY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Rule applies to tagged images."
          },
          "name": "TAGGED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Rule applies to untagged images."
          },
          "name": "UNTAGGED"
        }
      ],
      "name": "TagStatus"
    }
  },
  "version": "1.38.0",
  "fingerprint": "f0qyY75jrv7MG2KLx0U4yyesvlJUmOzGfb3MQqwoMQ4="
}
