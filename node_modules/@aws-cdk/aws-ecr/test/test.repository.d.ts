import { Test } from 'nodeunit';
declare const _default: {
    'construct repository'(test: Test): void;
    'repository creation with imageScanOnPush creates custom resource'(test: Test): void;
    'tag-based lifecycle policy'(test: Test): void;
    'add day-based lifecycle policy'(test: Test): void;
    'add count-based lifecycle policy'(test: Test): void;
    'mixing numbered and unnumbered rules'(test: Test): void;
    'tagstatus Any is automatically sorted to the back'(test: Test): void;
    'lifecycle rules can be added upon initialization'(test: Test): void;
    'calculate repository URI'(test: Test): void;
    'import with concrete arn'(test: Test): void;
    'fails if importing with token arn and no name'(test: Test): void;
    'import with token arn and repository name (see awslabs/aws-cdk#1232)'(test: Test): void;
    'import only with a repository name (arn is deduced)'(test: Test): void;
    'arnForLocalRepository can be used to render an ARN for a local repository'(test: Test): void;
    'resource policy'(test: Test): void;
    events: {
        'onImagePushed without imageTag creates the correct event'(test: Test): void;
        'onImageScanCompleted without imageTags creates the correct event'(test: Test): void;
        'onImageScanCompleted with one imageTag creates the correct event'(test: Test): void;
        'onImageScanCompleted with multiple imageTags creates the correct event'(test: Test): void;
        'removal policy is "Retain" by default'(test: Test): void;
        '"Delete" removal policy can be set explicitly'(test: Test): void;
        'grant adds appropriate resource-*'(test: Test): void;
    };
};
export = _default;
