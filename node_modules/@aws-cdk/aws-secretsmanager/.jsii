{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "1.38.0",
    "@aws-cdk/aws-iam": "1.38.0",
    "@aws-cdk/aws-kms": "1.38.0",
    "@aws-cdk/aws-lambda": "1.38.0",
    "@aws-cdk/aws-sam": "1.38.0",
    "@aws-cdk/core": "1.38.0",
    "constructs": "^3.0.2"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "assemblyOriginatorKeyFile": "../../key.snk",
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo",
          "signAssembly": true
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::SecretsManager",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.5.0 (build 46538f8)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "aws-secretsmanager"
  ],
  "license": "Apache-2.0",
  "name": "@aws-cdk/aws-secretsmanager",
  "readme": {
    "markdown": "## AWS Secrets Manager Construct Library\n<!--BEGIN STABILITY BANNER-->\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n<!--END STABILITY BANNER-->\n\n```ts\nimport * as secretsmanager from '@aws-cdk/aws-secretsmanager';\n```\n\n### Create a new Secret in a Stack\nIn order to have SecretsManager generate a new secret value automatically,\nyou can get started with the following:\n\n```ts lit=test/integ.secret.lit.ts\n    // Default secret\n    const secret = new secretsmanager.Secret(this, 'Secret');\n    secret.grantRead(role);\n\n    new iam.User(this, 'User', {\n      password: secret.secretValue,\n    });\n\n    // Templated secret\n    const templatedSecret = new secretsmanager.Secret(this, 'TemplatedSecret', {\n      generateSecretString: {\n        secretStringTemplate: JSON.stringify({ username: 'user' }),\n        generateStringKey: 'password',\n      },\n    });\n\n    new iam.User(this, 'OtherUser', {\n      userName: templatedSecret.secretValueFromJson('username').toString(),\n      password: templatedSecret.secretValueFromJson('password'),\n    });\n```\n\nThe `Secret` construct does not allow specifying the `SecretString` property\nof the `AWS::SecretsManager::Secret` resource (as this will almost always\nlead to the secret being surfaced in plain text and possibly committed to\nyour source control).\n\nIf you need to use a pre-existing secret, the recommended way is to manually\nprovision the secret in *AWS SecretsManager* and use the `Secret.fromSecretArn`\nor `Secret.fromSecretAttributes` method to make it available in your CDK Application:\n\n```ts\nconst secret = secretsmanager.Secret.fromSecretAttributes(scope, 'ImportedSecret', {\n  secretArn: 'arn:aws:secretsmanager:<region>:<account-id-number>:secret:<secret-name>-<random-6-characters>',\n  // If the secret is encrypted using a KMS-hosted CMK, either import or reference that key:\n  encryptionKey,\n});\n```\n\nSecretsManager secret values can only be used in select set of properties. For the\nlist of properties, see [the CloudFormation Dynamic References documentation](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/dynamic-references.html).\n\n### Rotating a Secret with a custom Lambda function\nA rotation schedule can be added to a Secret using a custom Lambda function:\n```ts\nconst fn = new lambda.Function(...);\nconst secret = new secretsmanager.Secret(this, 'Secret');\n\nsecret.addRotationSchedule('RotationSchedule', {\n  rotationLambda: fn,\n  automaticallyAfter: Duration.days(15)\n});\n```\nSee [Overview of the Lambda Rotation Function](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-lambda-function-overview.html) on how to implement a Lambda Rotation Function.\n\n### Rotating database credentials\nDefine a `SecretRotation` to rotate database credentials:\n```ts\nnew SecretRotation(this, 'SecretRotation', {\n  application: SecretRotationApplication.MYSQL_ROTATION_SINGLE_USER, // MySQL single user scheme\n  secret: mySecret,\n  target: myDatabase, // a Connectable\n  vpc: myVpc, // The VPC where the secret rotation application will be deployed\n});\n```\n\nThe secret must be a JSON string with the following format:\n```json\n{\n  \"engine\": \"<required: database engine>\",\n  \"host\": \"<required: instance host name>\",\n  \"username\": \"<required: username>\",\n  \"password\": \"<required: password>\",\n  \"dbname\": \"<optional: database name>\",\n  \"port\": \"<optional: if not specified, default port will be used>\",\n  \"masterarn\": \"<required for multi user rotation: the arn of the master secret which will be used to create users/change passwords>\"\n}\n```\n\nFor the multi user scheme, a `masterSecret` must be specified:\n```ts\nnew SecretRotation(stack, 'SecretRotation', {\n  application: SecretRotationApplication.MYSQL_ROTATION_MULTI_USER,\n  secret: myUserSecret, // The secret that will be rotated\n  masterSecret: myMasterSecret, // The secret used for the rotation\n  target: myDatabase,\n  vpc: myVpc,\n});\n```\n\nSee also [aws-rds](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/aws-rds/README.md) where\ncredentials generation and rotation is integrated.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-secretsmanager",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "assemblyOriginatorKeyFile": "../../key.snk",
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.SecretsManager",
      "packageId": "Amazon.CDK.AWS.SecretsManager",
      "signAssembly": true
    },
    "java": {
      "maven": {
        "artifactId": "secretsmanager",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.secretsmanager"
    },
    "js": {
      "npm": "@aws-cdk/aws-secretsmanager"
    },
    "python": {
      "distName": "aws-cdk.aws-secretsmanager",
      "module": "aws_cdk.aws_secretsmanager"
    }
  },
  "types": {
    "@aws-cdk/aws-secretsmanager.AttachedSecretOptions": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "deprecated": "use `secret.attach()` instead",
        "stability": "deprecated",
        "summary": "Options to add a secret attachment to a secret."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.AttachedSecretOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 360
      },
      "name": "AttachedSecretOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The target to attach the secret to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 364
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.AttachmentTargetType": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "The type of service or database that's being associated with the secret."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.AttachmentTargetType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 299
      },
      "members": [
        {
          "docs": {
            "deprecated": "use RDS_DB_INSTANCE instead",
            "stability": "deprecated",
            "summary": "A database instance."
          },
          "name": "INSTANCE"
        },
        {
          "docs": {
            "deprecated": "use RDS_DB_CLUSTER instead",
            "stability": "deprecated",
            "summary": "A database cluster."
          },
          "name": "CLUSTER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS::Redshift::Cluster."
          },
          "name": "REDSHIFT_CLUSTER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS::DocDB::DBInstance."
          },
          "name": "DOCDB_DB_INSTANCE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AWS::DocDB::DBCluster."
          },
          "name": "DOCDB_DB_CLUSTER"
        }
      ],
      "name": "AttachmentTargetType"
    },
    "@aws-cdk/aws-secretsmanager.CfnResourcePolicy": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::SecretsManager::ResourcePolicy"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::SecretsManager::ResourcePolicy`."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnResourcePolicy",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::SecretsManager::ResourcePolicy`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 72
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 113
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 124
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnResourcePolicy",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 76
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 118
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-resourcepolicy",
            "stability": "external",
            "summary": "`AWS::SecretsManager::ResourcePolicy.ResourcePolicy`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 82
          },
          "name": "resourcePolicy",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-secretid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::ResourcePolicy.SecretId`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 88
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::SecretsManager::ResourcePolicy`."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnResourcePolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 16
      },
      "name": "CfnResourcePolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-resourcepolicy",
            "stability": "external",
            "summary": "`AWS::SecretsManager::ResourcePolicy.ResourcePolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 22
          },
          "name": "resourcePolicy",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-resourcepolicy.html#cfn-secretsmanager-resourcepolicy-secretid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::ResourcePolicy.SecretId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 28
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.CfnRotationSchedule": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::SecretsManager::RotationSchedule"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::SecretsManager::RotationSchedule`."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::SecretsManager::RotationSchedule`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 198
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 245
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 257
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnRotationSchedule",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 202
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 250
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-secretid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::RotationSchedule.SecretId`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 208
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationlambdaarn",
            "stability": "external",
            "summary": "`AWS::SecretsManager::RotationSchedule.RotationLambdaARN`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 214
          },
          "name": "rotationLambdaArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationrules",
            "stability": "external",
            "summary": "`AWS::SecretsManager::RotationSchedule.RotationRules`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 220
          },
          "name": "rotationRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-rotationrules.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 267
      },
      "name": "RotationRulesProperty",
      "namespace": "CfnRotationSchedule",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-rotationschedule-rotationrules.html#cfn-secretsmanager-rotationschedule-rotationrules-automaticallyafterdays",
            "stability": "external",
            "summary": "`CfnRotationSchedule.RotationRulesProperty.AutomaticallyAfterDays`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 272
          },
          "name": "automaticallyAfterDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::SecretsManager::RotationSchedule`."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationScheduleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 135
      },
      "name": "CfnRotationScheduleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-secretid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::RotationSchedule.SecretId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 141
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationlambdaarn",
            "stability": "external",
            "summary": "`AWS::SecretsManager::RotationSchedule.RotationLambdaARN`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 147
          },
          "name": "rotationLambdaArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html#cfn-secretsmanager-rotationschedule-rotationrules",
            "stability": "external",
            "summary": "`AWS::SecretsManager::RotationSchedule.RotationRules`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 153
          },
          "name": "rotationRules",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnRotationSchedule.RotationRulesProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.CfnSecret": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::SecretsManager::Secret"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::SecretsManager::Secret`."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::SecretsManager::Secret`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 398
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 465
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 480
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecret",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 402
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 470
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-tags",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 438
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-description",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.Description`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 408
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-generatesecretstring",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.GenerateSecretString`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 414
          },
          "name": "generateSecretString",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-kmskeyid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.KmsKeyId`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 420
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-name",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.Name`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 426
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-secretstring",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.SecretString`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 432
          },
          "name": "secretString",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html",
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 490
      },
      "name": "GenerateSecretStringProperty",
      "namespace": "CfnSecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludecharacters",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.ExcludeCharacters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 495
          },
          "name": "excludeCharacters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludelowercase",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.ExcludeLowercase`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 500
          },
          "name": "excludeLowercase",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludenumbers",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.ExcludeNumbers`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 505
          },
          "name": "excludeNumbers",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludepunctuation",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.ExcludePunctuation`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 510
          },
          "name": "excludePunctuation",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-excludeuppercase",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.ExcludeUppercase`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 515
          },
          "name": "excludeUppercase",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-generatestringkey",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.GenerateStringKey`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 520
          },
          "name": "generateStringKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-includespace",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.IncludeSpace`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 525
          },
          "name": "includeSpace",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-passwordlength",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.PasswordLength`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 530
          },
          "name": "passwordLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-requireeachincludedtype",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.RequireEachIncludedType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 535
          },
          "name": "requireEachIncludedType",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-secretsmanager-secret-generatesecretstring.html#cfn-secretsmanager-secret-generatesecretstring-secretstringtemplate",
            "stability": "external",
            "summary": "`CfnSecret.GenerateSecretStringProperty.SecretStringTemplate`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 540
          },
          "name": "secretStringTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.CfnSecretProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::SecretsManager::Secret`."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 312
      },
      "name": "CfnSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-description",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 318
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-generatesecretstring",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.GenerateSecretString`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 324
          },
          "name": "generateSecretString",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-secretsmanager.CfnSecret.GenerateSecretStringProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-kmskeyid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.KmsKeyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 330
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-name",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 336
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-secretstring",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.SecretString`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 342
          },
          "name": "secretString",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secret.html#cfn-secretsmanager-secret-tags",
            "stability": "external",
            "summary": "`AWS::SecretsManager::Secret.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 348
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachment": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::SecretsManager::SecretTargetAttachment"
        },
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html",
        "stability": "external",
        "summary": "A CloudFormation `AWS::SecretsManager::SecretTargetAttachment`."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachment",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::SecretsManager::SecretTargetAttachment`."
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 663
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 712
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 724
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSecretTargetAttachment",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 667
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 717
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-secretid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::SecretTargetAttachment.SecretId`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 673
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targetid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::SecretTargetAttachment.TargetId`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 679
          },
          "name": "targetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targettype",
            "stability": "external",
            "summary": "`AWS::SecretsManager::SecretTargetAttachment.TargetType`."
          },
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 685
          },
          "name": "targetType",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html",
        "stability": "external",
        "summary": "Properties for defining a `AWS::SecretsManager::SecretTargetAttachment`."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.CfnSecretTargetAttachmentProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secretsmanager.generated.ts",
        "line": 598
      },
      "name": "CfnSecretTargetAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-secretid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::SecretTargetAttachment.SecretId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 604
          },
          "name": "secretId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targetid",
            "stability": "external",
            "summary": "`AWS::SecretsManager::SecretTargetAttachment.TargetId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 610
          },
          "name": "targetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html#cfn-secretsmanager-secrettargetattachment-targettype",
            "stability": "external",
            "summary": "`AWS::SecretsManager::SecretTargetAttachment.TargetType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secretsmanager.generated.ts",
            "line": 616
          },
          "name": "targetType",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.ISecret": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "A secret in AWS Secrets Manager."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ISecret",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 11
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Adds a rotation schedule to the secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 47
          },
          "name": "addRotationSchedule",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.RotationSchedule"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If this secret was created in this stack, a resource policy will be\nautomatically created upon the first call to `addToResourcePolicy`. If\nthe secret is imported, then this is a no-op.",
            "stability": "stable",
            "summary": "Adds a statement to the IAM resource policy associated with this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 56
          },
          "name": "addToResourcePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Denies the `DeleteSecret` action to all principals within the current account."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 62
          },
          "name": "denyAccountRootDelete"
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Grants reading the secret value to some role."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 42
          },
          "name": "grantRead",
          "parameters": [
            {
              "docs": {
                "summary": "the principal being granted permission."
              },
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "docs": {
                "remarks": "If not specified, no restriction on the version\nstages is applied.",
                "summary": "the version stages the grant is limited to."
              },
              "name": "versionStages",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 33
          },
          "name": "secretValueFromJson",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          }
        }
      ],
      "name": "ISecret",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "The ARN of the secret in AWS Secrets Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 22
          },
          "name": "secretArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Retrieve the value of the stored secret as a `SecretValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 28
          },
          "name": "secretValue",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "When not specified, the default\nKMS key for the account and region is being used.",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt this secret, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 16
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "A secret attachment target."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 289
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Renders the target specifications."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 293
          },
          "name": "asSecretAttachmentTarget",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps"
            }
          }
        }
      ],
      "name": "ISecretAttachmentTarget"
    },
    "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable"
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment",
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.ISecret"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 377
      },
      "name": "ISecretTargetAttachment",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Same as `secretArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 383
          },
          "name": "secretTargetAttachmentSecretArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.ResourcePolicy": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Secret Resource Policy."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ResourcePolicy",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ResourcePolicyProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/policy.ts",
        "line": 19
      },
      "name": "ResourcePolicy",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The IAM policy document for this policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/policy.ts",
            "line": 23
          },
          "name": "document",
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.ResourcePolicyProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a ResourcePolicy."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.ResourcePolicyProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/policy.ts",
        "line": 9
      },
      "name": "ResourcePolicyProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The secret to attach a resource-based permissions policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/policy.ts",
            "line": 13
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.RotationSchedule": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "A rotation schedule."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.RotationSchedule",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 37
      },
      "name": "RotationSchedule"
    },
    "@aws-cdk/aws-secretsmanager.RotationScheduleOptions": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options to add a rotation schedule to a secret."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 9
      },
      "name": "RotationScheduleOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "THe Lambda function that can rotate the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 13
          },
          "name": "rotationLambda",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(30)",
            "stability": "stable",
            "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 21
          },
          "name": "automaticallyAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.RotationScheduleProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a RotationSchedule."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleProps",
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.RotationScheduleOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rotation-schedule.ts",
        "line": 27
      },
      "name": "RotationScheduleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The secret to rotate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rotation-schedule.ts",
            "line": 31
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.Secret": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "Creates a new secret in AWS SecretsManager."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.Secret",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.ISecret"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 189
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 191
          },
          "name": "fromSecretArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "secretArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Import an existing secret into the Stack."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 202
          },
          "name": "fromSecretAttributes",
          "parameters": [
            {
              "docs": {
                "summary": "the scope of the import."
              },
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "docs": {
                "summary": "the ID of the imported Secret in the construct tree."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the attributes of the imported secret."
              },
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.SecretAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a rotation schedule to the secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 159
          },
          "name": "addRotationSchedule",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.RotationSchedule"
            }
          }
        },
        {
          "docs": {
            "deprecated": "use `attach()` instead",
            "returns": "an AttachedSecret",
            "stability": "deprecated",
            "summary": "Adds a target attachment to the secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 258
          },
          "name": "addTargetAttachment",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.AttachedSecretOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretTargetAttachment"
            }
          }
        },
        {
          "docs": {
            "remarks": "If this secret was created in this stack, a resource policy will be\nautomatically created upon the first call to `addToResourcePolicy`. If\nthe secret is imported, then this is a no-op.",
            "stability": "stable",
            "summary": "Adds a statement to the IAM resource policy associated with this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 166
          },
          "name": "addToResourcePolicy",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "returns": "An attached secret",
            "stability": "stable",
            "summary": "Attach a target to this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 271
          },
          "name": "attach",
          "parameters": [
            {
              "docs": {
                "summary": "The target to attach."
              },
              "name": "target",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Denies the `DeleteSecret` action to all principals within the current account."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 176
          },
          "name": "denyAccountRootDelete",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants reading the secret value to some role."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 126
          },
          "name": "grantRead",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "versionStages",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 155
          },
          "name": "secretValueFromJson",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "jsonField",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          }
        }
      ],
      "name": "Secret",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 215
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the secret in AWS Secrets Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 213
          },
          "name": "secretArn",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve the value of the stored secret as a `SecretValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 151
          },
          "name": "secretValue",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "docs": {
            "remarks": "When not specified, the default\nKMS key for the account and region is being used.",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt this secret, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 212
          },
          "name": "encryptionKey",
          "optional": true,
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attachment target specifications."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 343
      },
      "name": "SecretAttachmentTargetProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The id of the target to attach the secret to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 347
          },
          "name": "targetId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of the target to attach the secret to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 352
          },
          "name": "targetType",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.AttachmentTargetType"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.SecretAttributes": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Attributes required to import an existing secret into the Stack."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 103
      },
      "name": "SecretAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the secret in SecretsManager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 112
          },
          "name": "secretArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The encryption key that is used to encrypt the secret, unless the default SecretsManager key is used."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 107
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.SecretProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The properties required to create a new secret in AWS Secrets Manager."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 68
      },
      "name": "SecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No description.",
            "stability": "stable",
            "summary": "An optional, human-friendly description of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 74
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A default KMS key for the account and region is used.",
            "stability": "stable",
            "summary": "The customer-managed encryption key to use for encrypting the secret value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 81
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 32 characters with upper-case letters, lower-case letters, punctuation and numbers (at least one from each\ncategory), per the default values of ``SecretStringGenerator``.",
            "stability": "stable",
            "summary": "Configuration for how to generate a secret value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 89
          },
          "name": "generateSecretString",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretStringGenerator"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A name is generated by CloudFormation.",
            "remarks": "Note that deleting secrets from SecretsManager does not happen immediately, but after a 7 to\n30 days blackout period. During that period, it is not possible to create another secret that shares the same name.",
            "stability": "stable",
            "summary": "A name for the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 97
          },
          "name": "secretName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.SecretRotation": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Construct",
      "docs": {
        "stability": "stable",
        "summary": "Secret rotation for a service or database."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretRotation",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret-rotation.ts",
        "line": 201
      },
      "name": "SecretRotation"
    },
    "@aws-cdk/aws-secretsmanager.SecretRotationApplication": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "docs": {
        "stability": "stable",
        "summary": "A secret rotation serverless application."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "applicationId",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "semanticVersion",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplicationOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret-rotation.ts",
        "line": 21
      },
      "name": "SecretRotationApplication",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS MariaDB using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 30
          },
          "name": "MARIADB_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS MariaDB using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 25
          },
          "name": "MARIADB_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for MongoDB using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 102
          },
          "name": "MONGODB_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for MongoDB using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 97
          },
          "name": "MONGODB_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS MySQL using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 42
          },
          "name": "MYSQL_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS MySQL using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 37
          },
          "name": "MYSQL_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS Oracle using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 54
          },
          "name": "ORACLE_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS Oracle using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 49
          },
          "name": "ORACLE_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS PostgreSQL using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 66
          },
          "name": "POSTGRES_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS PostgreSQL using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 61
          },
          "name": "POSTGRES_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for Amazon Redshift using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 90
          },
          "name": "REDSHIFT_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for Amazon Redshift using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 85
          },
          "name": "REDSHIFT_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS SQL Server using the multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 78
          },
          "name": "SQLSERVER_ROTATION_MULTI_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Conducts an AWS SecretsManager secret rotation for RDS SQL Server using the single user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 73
          },
          "name": "SQLSERVER_ROTATION_SINGLE_USER",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The application identifier of the rotation application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 109
          },
          "name": "applicationId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The semantic version of the rotation application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 114
          },
          "name": "semanticVersion",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Whether the rotation application uses the mutli user scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 119
          },
          "name": "isMultiUser",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.SecretRotationApplicationOptions": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for a SecretRotationApplication."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplicationOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret-rotation.ts",
        "line": 10
      },
      "name": "SecretRotationApplicationOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Whether the rotation application uses the mutli user scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 16
          },
          "name": "isMultiUser",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.SecretRotationProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for a SecretRotation."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret-rotation.ts",
        "line": 131
      },
      "name": "SecretRotationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The serverless application for the rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 171
          },
          "name": "application",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.SecretRotationApplication"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "It must be a JSON string with the following format:\n```\n{\n   \"engine\": <required: database engine>,\n   \"host\": <required: instance host name>,\n   \"username\": <required: username>,\n   \"password\": <required: password>,\n   \"dbname\": <optional: database name>,\n   \"port\": <optional: if not specified, default port will be used>,\n   \"masterarn\": <required for multi user rotation: the arn of the master secret which will be used to create users/change passwords>\n}\n```\n\nThis is typically the case for a secret referenced from an\nAWS::SecretsManager::SecretTargetAttachment or an `ISecret` returned by the `attach()` method of `Secret`.",
            "see": "https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-secrettargetattachment.html",
            "stability": "stable",
            "summary": "The secret to rotate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 151
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The target service or database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 188
          },
          "name": "target",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IConnectable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The VPC where the Lambda rotation function will run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 176
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(30)",
            "stability": "stable",
            "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 166
          },
          "name": "automaticallyAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- single user rotation scheme",
            "stability": "stable",
            "summary": "The master secret for a multi user rotation scheme."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 158
          },
          "name": "masterSecret",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new security group is created",
            "stability": "stable",
            "summary": "The security group for the Lambda rotation function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 195
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the Vpc default strategy if not specified.",
            "stability": "stable",
            "summary": "The type of subnets in the VPC where the Lambda rotation function will run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret-rotation.ts",
            "line": 183
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.SecretStringGenerator": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration to generate secrets such as passwords automatically."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretStringGenerator",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 432
      },
      "name": "SecretStringGenerator",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "no exclusions",
            "remarks": "The string can be a minimum\nof ``0`` and a maximum of ``4096`` characters long.",
            "stability": "stable",
            "summary": "A string that includes characters that shouldn't be included in the generated password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 460
          },
          "name": "excludeCharacters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password shouldn't include lowercase letters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 481
          },
          "name": "excludeLowercase",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password shouldn't include digits."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 488
          },
          "name": "excludeNumbers",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password shouldn't include punctuation characters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 474
          },
          "name": "excludePunctuation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password shouldn't include uppercase letters."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 438
          },
          "name": "excludeUppercase",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "If you specify ``generateStringKey`` then ``secretStringTemplate``\nmust be also be specified.",
            "stability": "stable",
            "summary": "The JSON key name that's used to add the generated password to the JSON structure specified by the ``secretStringTemplate`` parameter."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 503
          },
          "name": "generateStringKey",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies that the generated password can include the space character."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 452
          },
          "name": "includeSpace",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "32",
            "stability": "stable",
            "summary": "The desired length of the generated password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 467
          },
          "name": "passwordLength",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Specifies whether the generated password must include at least one of every allowed character type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 445
          },
          "name": "requireEachIncludedType",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The ``generateStringKey`` is\ncombined with the generated random string and inserted into the JSON structure that's specified by this parameter.\nThe merged JSON string is returned as the completed SecretString of the secret. If you specify ``secretStringTemplate``\nthen ``generateStringKey`` must be also be specified.",
            "stability": "stable",
            "summary": "A properly structured JSON string that the generated password can be added to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 496
          },
          "name": "secretStringTemplate",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.SecretTargetAttachment": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "stable",
        "summary": "An attached secret."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretTargetAttachment",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretTargetAttachmentProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment",
        "@aws-cdk/aws-secretsmanager.ISecret"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 389
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 391
          },
          "name": "fromSecretTargetAttachmentSecretArn",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "@aws-cdk/core.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "secretTargetAttachmentSecretArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds a rotation schedule to the secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 159
          },
          "name": "addRotationSchedule",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-secretsmanager.RotationScheduleOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.RotationSchedule"
            }
          }
        },
        {
          "docs": {
            "remarks": "If this secret was created in this stack, a resource policy will be\nautomatically created upon the first call to `addToResourcePolicy`. If\nthe secret is imported, then this is a no-op.",
            "stability": "stable",
            "summary": "Adds a statement to the IAM resource policy associated with this secret."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 166
          },
          "name": "addToResourcePolicy",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Denies the `DeleteSecret` action to all principals within the current account."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 176
          },
          "name": "denyAccountRootDelete",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Grants reading the secret value to some role."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 126
          },
          "name": "grantRead",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "grantee",
              "type": {
                "fqn": "@aws-cdk/aws-iam.IGrantable"
              }
            },
            {
              "name": "versionStages",
              "optional": true,
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-iam.Grant"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Interpret the secret as a JSON object and return a field's value from it as a `SecretValue`."
          },
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 155
          },
          "name": "secretValueFromJson",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "parameters": [
            {
              "name": "jsonField",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/core.SecretValue"
            }
          }
        }
      ],
      "name": "SecretTargetAttachment",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 410
          },
          "name": "autoCreatePolicy",
          "protected": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The ARN of the secret in AWS Secrets Manager."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 403
          },
          "name": "secretArn",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "stable",
            "summary": "Same as `secretArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 408
          },
          "name": "secretTargetAttachmentSecretArn",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecretTargetAttachment",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve the value of the stored secret as a `SecretValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 151
          },
          "name": "secretValue",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        },
        {
          "docs": {
            "remarks": "When not specified, the default\nKMS key for the account and region is being used.",
            "stability": "stable",
            "summary": "The customer-managed encryption key that is used to encrypt this secret, if any."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 402
          },
          "name": "encryptionKey",
          "optional": true,
          "overrides": "@aws-cdk/aws-secretsmanager.ISecret",
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ]
    },
    "@aws-cdk/aws-secretsmanager.SecretTargetAttachmentProps": {
      "assembly": "@aws-cdk/aws-secretsmanager",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Construction properties for an AttachedSecret."
      },
      "fqn": "@aws-cdk/aws-secretsmanager.SecretTargetAttachmentProps",
      "interfaces": [
        "@aws-cdk/aws-secretsmanager.AttachedSecretOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/secret.ts",
        "line": 370
      },
      "name": "SecretTargetAttachmentProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The secret to attach to the target."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/secret.ts",
            "line": 374
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ]
    }
  },
  "version": "1.38.0",
  "fingerprint": "f3VMffIoExdzXpWQN/DewltDKW/t/k+gaxYoiiVFuGg="
}
