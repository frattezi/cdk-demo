"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Provides default values for certain regional information points.
 */
class Default {
    constructor() { }
    /**
     * Computes a "standard" AWS Service principal for a given service, region and suffix. This is useful for example when
     * you need to compute a service principal name, but you do not have a synthesize-time region literal available (so
     * all you have is `{ "Ref": "AWS::Region" }`). This way you get the same defaulting behavior that is normally used
     * for built-in data.
     *
     * @param service   the name of the service (s3, s3.amazonaws.com, ...)
     * @param region    the region in which the service principal is needed.
     * @param urlSuffix the URL suffix for the partition in which the region is located.
     */
    static servicePrincipal(service, region, urlSuffix) {
        const matches = service.match(/^([^.]+)(?:\.amazonaws\.com(?:\.cn)?)?$/);
        if (!matches) {
            // Return "service" if it does not look like any of the following:
            // - s3
            // - s3.amazonaws.com
            // - s3.amazonaws.com.cn
            return service;
        }
        service = matches[1]; // Simplify the service name down to something like "s3"
        switch (service) {
            // Services with a regional AND partitional principal
            case 'codedeploy':
            case 'logs':
                return `${service}.${region}.${urlSuffix}`;
            // Services with a regional principal
            case 'states':
                return `${service}.${region}.amazonaws.com`;
            // Services with a partitional principal
            case 'ec2':
                return `${service}.${urlSuffix}`;
            // Services with a universal principal across all regions/partitions (the default case)
            default:
                return `${service}.amazonaws.com`;
        }
    }
}
exports.Default = Default;
/**
 * The default value for a VPC Endpoint Service name prefix, useful if you do
 * not have a synthesize-time region literal available (all you have is
 * `{ "Ref": "AWS::Region" }`)
 */
Default.VPC_ENDPOINT_SERVICE_NAME_PREFIX = 'com.amazonaws.vpce';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImRlZmF1bHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7R0FFRztBQUNILE1BQWEsT0FBTztJQW1EbEIsZ0JBQXdCLENBQUM7SUExQ3pCOzs7Ozs7Ozs7T0FTRztJQUNJLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFlLEVBQUUsTUFBYyxFQUFFLFNBQWlCO1FBQy9FLE1BQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMseUNBQXlDLENBQUMsQ0FBQztRQUN6RSxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ1osa0VBQWtFO1lBQ2xFLE9BQU87WUFDUCxxQkFBcUI7WUFDckIsd0JBQXdCO1lBQ3hCLE9BQU8sT0FBTyxDQUFDO1NBQ2hCO1FBRUQsT0FBTyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLHdEQUF3RDtRQUM5RSxRQUFRLE9BQU8sRUFBRTtZQUNmLHFEQUFxRDtZQUNyRCxLQUFLLFlBQVksQ0FBQztZQUNsQixLQUFLLE1BQU07Z0JBQ1QsT0FBTyxHQUFHLE9BQU8sSUFBSSxNQUFNLElBQUksU0FBUyxFQUFFLENBQUM7WUFFN0MscUNBQXFDO1lBQ3JDLEtBQUssUUFBUTtnQkFDWCxPQUFPLEdBQUcsT0FBTyxJQUFJLE1BQU0sZ0JBQWdCLENBQUM7WUFFOUMsd0NBQXdDO1lBQ3hDLEtBQUssS0FBSztnQkFDUixPQUFPLEdBQUcsT0FBTyxJQUFJLFNBQVMsRUFBRSxDQUFDO1lBRW5DLHVGQUF1RjtZQUN2RjtnQkFDRSxPQUFPLEdBQUcsT0FBTyxnQkFBZ0IsQ0FBQztTQUVyQztJQUNILENBQUM7O0FBakRILDBCQW9EQztBQWxEQzs7OztHQUlHO0FBQ29CLHdDQUFnQyxHQUFHLG9CQUFvQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQcm92aWRlcyBkZWZhdWx0IHZhbHVlcyBmb3IgY2VydGFpbiByZWdpb25hbCBpbmZvcm1hdGlvbiBwb2ludHMuXG4gKi9cbmV4cG9ydCBjbGFzcyBEZWZhdWx0IHtcblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQgdmFsdWUgZm9yIGEgVlBDIEVuZHBvaW50IFNlcnZpY2UgbmFtZSBwcmVmaXgsIHVzZWZ1bCBpZiB5b3UgZG9cbiAgICogbm90IGhhdmUgYSBzeW50aGVzaXplLXRpbWUgcmVnaW9uIGxpdGVyYWwgYXZhaWxhYmxlIChhbGwgeW91IGhhdmUgaXNcbiAgICogYHsgXCJSZWZcIjogXCJBV1M6OlJlZ2lvblwiIH1gKVxuICAgKi9cbiAgcHVibGljIHN0YXRpYyByZWFkb25seSBWUENfRU5EUE9JTlRfU0VSVklDRV9OQU1FX1BSRUZJWCA9ICdjb20uYW1hem9uYXdzLnZwY2UnO1xuXG4gIC8qKlxuICAgKiBDb21wdXRlcyBhIFwic3RhbmRhcmRcIiBBV1MgU2VydmljZSBwcmluY2lwYWwgZm9yIGEgZ2l2ZW4gc2VydmljZSwgcmVnaW9uIGFuZCBzdWZmaXguIFRoaXMgaXMgdXNlZnVsIGZvciBleGFtcGxlIHdoZW5cbiAgICogeW91IG5lZWQgdG8gY29tcHV0ZSBhIHNlcnZpY2UgcHJpbmNpcGFsIG5hbWUsIGJ1dCB5b3UgZG8gbm90IGhhdmUgYSBzeW50aGVzaXplLXRpbWUgcmVnaW9uIGxpdGVyYWwgYXZhaWxhYmxlIChzb1xuICAgKiBhbGwgeW91IGhhdmUgaXMgYHsgXCJSZWZcIjogXCJBV1M6OlJlZ2lvblwiIH1gKS4gVGhpcyB3YXkgeW91IGdldCB0aGUgc2FtZSBkZWZhdWx0aW5nIGJlaGF2aW9yIHRoYXQgaXMgbm9ybWFsbHkgdXNlZFxuICAgKiBmb3IgYnVpbHQtaW4gZGF0YS5cbiAgICpcbiAgICogQHBhcmFtIHNlcnZpY2UgICB0aGUgbmFtZSBvZiB0aGUgc2VydmljZSAoczMsIHMzLmFtYXpvbmF3cy5jb20sIC4uLilcbiAgICogQHBhcmFtIHJlZ2lvbiAgICB0aGUgcmVnaW9uIGluIHdoaWNoIHRoZSBzZXJ2aWNlIHByaW5jaXBhbCBpcyBuZWVkZWQuXG4gICAqIEBwYXJhbSB1cmxTdWZmaXggdGhlIFVSTCBzdWZmaXggZm9yIHRoZSBwYXJ0aXRpb24gaW4gd2hpY2ggdGhlIHJlZ2lvbiBpcyBsb2NhdGVkLlxuICAgKi9cbiAgcHVibGljIHN0YXRpYyBzZXJ2aWNlUHJpbmNpcGFsKHNlcnZpY2U6IHN0cmluZywgcmVnaW9uOiBzdHJpbmcsIHVybFN1ZmZpeDogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBtYXRjaGVzID0gc2VydmljZS5tYXRjaCgvXihbXi5dKykoPzpcXC5hbWF6b25hd3NcXC5jb20oPzpcXC5jbik/KT8kLyk7XG4gICAgaWYgKCFtYXRjaGVzKSB7XG4gICAgICAvLyBSZXR1cm4gXCJzZXJ2aWNlXCIgaWYgaXQgZG9lcyBub3QgbG9vayBsaWtlIGFueSBvZiB0aGUgZm9sbG93aW5nOlxuICAgICAgLy8gLSBzM1xuICAgICAgLy8gLSBzMy5hbWF6b25hd3MuY29tXG4gICAgICAvLyAtIHMzLmFtYXpvbmF3cy5jb20uY25cbiAgICAgIHJldHVybiBzZXJ2aWNlO1xuICAgIH1cblxuICAgIHNlcnZpY2UgPSBtYXRjaGVzWzFdOyAvLyBTaW1wbGlmeSB0aGUgc2VydmljZSBuYW1lIGRvd24gdG8gc29tZXRoaW5nIGxpa2UgXCJzM1wiXG4gICAgc3dpdGNoIChzZXJ2aWNlKSB7XG4gICAgICAvLyBTZXJ2aWNlcyB3aXRoIGEgcmVnaW9uYWwgQU5EIHBhcnRpdGlvbmFsIHByaW5jaXBhbFxuICAgICAgY2FzZSAnY29kZWRlcGxveSc6XG4gICAgICBjYXNlICdsb2dzJzpcbiAgICAgICAgcmV0dXJuIGAke3NlcnZpY2V9LiR7cmVnaW9ufS4ke3VybFN1ZmZpeH1gO1xuXG4gICAgICAvLyBTZXJ2aWNlcyB3aXRoIGEgcmVnaW9uYWwgcHJpbmNpcGFsXG4gICAgICBjYXNlICdzdGF0ZXMnOlxuICAgICAgICByZXR1cm4gYCR7c2VydmljZX0uJHtyZWdpb259LmFtYXpvbmF3cy5jb21gO1xuXG4gICAgICAvLyBTZXJ2aWNlcyB3aXRoIGEgcGFydGl0aW9uYWwgcHJpbmNpcGFsXG4gICAgICBjYXNlICdlYzInOlxuICAgICAgICByZXR1cm4gYCR7c2VydmljZX0uJHt1cmxTdWZmaXh9YDtcblxuICAgICAgLy8gU2VydmljZXMgd2l0aCBhIHVuaXZlcnNhbCBwcmluY2lwYWwgYWNyb3NzIGFsbCByZWdpb25zL3BhcnRpdGlvbnMgKHRoZSBkZWZhdWx0IGNhc2UpXG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gYCR7c2VydmljZX0uYW1hem9uYXdzLmNvbWA7XG5cbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGNvbnN0cnVjdG9yKCkgeyB9XG59XG4iXX0=