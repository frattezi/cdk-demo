import * as cxapi from '@aws-cdk/cx-api';
import { ISDK } from './aws-auth';
export declare const DEFAULT_TOOLKIT_STACK_NAME = "CDKToolkit";
/** @experimental */
export declare class ToolkitInfo {
    private readonly props;
    static determineName(overrideName?: string): string;
    /** @experimental */
    static lookup(environment: cxapi.Environment, sdk: ISDK, stackName: string | undefined): Promise<ToolkitInfo | undefined>;
    readonly sdk: ISDK;
    constructor(props: {
        readonly sdk: ISDK;
        bucketName: string;
        bucketEndpoint: string;
        environment: cxapi.Environment;
        version: number;
    });
    get bucketUrl(): string;
    get bucketName(): string;
    get version(): number;
    /**
     * Prepare an ECR repository for uploading to using Docker
     *
     * @experimental
     */
    prepareEcrRepository(repositoryName: string): Promise<EcrRepositoryInfo>;
    private ecr;
}
/** @experimental */
export interface EcrRepositoryInfo {
    repositoryUri: string;
}
/** @experimental */
export interface EcrCredentials {
    username: string;
    password: string;
    endpoint: string;
}
