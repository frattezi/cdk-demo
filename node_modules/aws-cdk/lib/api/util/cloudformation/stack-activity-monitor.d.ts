import * as cxapi from '@aws-cdk/cx-api';
import * as aws from 'aws-sdk';
export declare class StackActivityMonitor {
    private readonly cfn;
    private readonly stackName;
    private readonly stack;
    private readonly resourcesTotal?;
    private active;
    private activity;
    /**
     * Number of ms to wait between pings
     */
    private readonly tickSleep;
    /**
     * Number of ms to wait between pagination calls
     */
    private readonly pageSleep;
    /**
     * Number of ms of change absence before we tell the user about the resources that are currently in progress.
     */
    private readonly inProgressDelay;
    /**
     * Determines which events not to display
     */
    private startTime;
    /**
     * Current tick timer
     */
    private tickTimer?;
    /**
     * A list of resource IDs which are currently being processed
     */
    private resourcesInProgress;
    /**
     * Count of resources that have reported a _COMPLETE status
     */
    private resourcesDone;
    /**
     * How many digits we need to represent the total count (for lining up the status reporting)
     */
    private resourceDigits;
    /**
     * Last time we printed something to the console.
     *
     * Used to measure timeout for progress reporting.
     */
    private lastPrintTime;
    /**
     * Set to the activity of reading the current events
     */
    private readPromise?;
    /**
     * The with of the "resource type" column.
     */
    private readonly resourceTypeColumnWidth;
    constructor(cfn: aws.CloudFormation, stackName: string, stack: cxapi.CloudFormationStackArtifact, resourcesTotal?: number | undefined);
    start(): this;
    stop(): Promise<void>;
    private scheduleNextTick;
    private tick;
    /**
     * Flushes all unflushed events sorted by timestamp.
     */
    private flushEvents;
    private flushActivity;
    private rememberActivity;
    private printActivity;
    /**
     * Report the current progress as a [34/42] string, or just [34] if the total is unknown
     */
    private progress;
    /**
     * If some resources are taking a while to create, notify the user about what's currently in progress
     */
    private printInProgress;
    private findMetadataFor;
    private colorFromStatus;
    private readEvents;
}
